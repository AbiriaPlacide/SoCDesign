// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "09/02/2021 02:37:09"

// 
// Device: Altera 5CSEMA5F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module DigitalLockController (
	X,
	Enter,
	Reset_Lock,
	Open,
	State,
	HEXout);
input 	X;
input 	Enter;
input 	Reset_Lock;
output 	Open;
output 	[3:0] State;
output 	[0:6] HEXout;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Open~output_o ;
wire \State[0]~output_o ;
wire \State[1]~output_o ;
wire \State[2]~output_o ;
wire \State[3]~output_o ;
wire \HEXout[6]~output_o ;
wire \HEXout[5]~output_o ;
wire \HEXout[4]~output_o ;
wire \HEXout[3]~output_o ;
wire \HEXout[2]~output_o ;
wire \HEXout[1]~output_o ;
wire \HEXout[0]~output_o ;
wire \Enter~input_o ;
wire \Reset_Lock~input_o ;
wire \X~input_o ;
wire \State~2_combout ;
wire \State[0]~reg0_q ;
wire \State~1_combout ;
wire \State[1]~reg0_q ;
wire \State~0_combout ;
wire \State[2]~reg0_q ;
wire \Decoder0~0_combout ;
wire \comb_43|WideOr6~0_combout ;
wire \comb_43|WideOr5~0_combout ;
wire \comb_43|WideOr4~0_combout ;
wire \comb_43|WideOr3~0_combout ;
wire \comb_43|Decoder0~0_combout ;
wire \comb_43|WideOr1~0_combout ;
wire \comb_43|WideOr0~0_combout ;


cyclonev_io_obuf \Open~output (
	.i(\Decoder0~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Open~output_o ),
	.obar());
// synopsys translate_off
defparam \Open~output .bus_hold = "false";
defparam \Open~output .open_drain_output = "false";
defparam \Open~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \State[0]~output (
	.i(\State[0]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\State[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \State[0]~output .bus_hold = "false";
defparam \State[0]~output .open_drain_output = "false";
defparam \State[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \State[1]~output (
	.i(\State[1]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\State[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \State[1]~output .bus_hold = "false";
defparam \State[1]~output .open_drain_output = "false";
defparam \State[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \State[2]~output (
	.i(\State[2]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\State[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \State[2]~output .bus_hold = "false";
defparam \State[2]~output .open_drain_output = "false";
defparam \State[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \State[3]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\State[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \State[3]~output .bus_hold = "false";
defparam \State[3]~output .open_drain_output = "false";
defparam \State[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \HEXout[6]~output (
	.i(\comb_43|WideOr6~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEXout[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEXout[6]~output .bus_hold = "false";
defparam \HEXout[6]~output .open_drain_output = "false";
defparam \HEXout[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \HEXout[5]~output (
	.i(\comb_43|WideOr5~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEXout[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEXout[5]~output .bus_hold = "false";
defparam \HEXout[5]~output .open_drain_output = "false";
defparam \HEXout[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \HEXout[4]~output (
	.i(\comb_43|WideOr4~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEXout[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEXout[4]~output .bus_hold = "false";
defparam \HEXout[4]~output .open_drain_output = "false";
defparam \HEXout[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \HEXout[3]~output (
	.i(\comb_43|WideOr3~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEXout[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEXout[3]~output .bus_hold = "false";
defparam \HEXout[3]~output .open_drain_output = "false";
defparam \HEXout[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \HEXout[2]~output (
	.i(\comb_43|Decoder0~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEXout[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEXout[2]~output .bus_hold = "false";
defparam \HEXout[2]~output .open_drain_output = "false";
defparam \HEXout[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \HEXout[1]~output (
	.i(\comb_43|WideOr1~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEXout[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEXout[1]~output .bus_hold = "false";
defparam \HEXout[1]~output .open_drain_output = "false";
defparam \HEXout[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \HEXout[0]~output (
	.i(\comb_43|WideOr0~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEXout[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEXout[0]~output .bus_hold = "false";
defparam \HEXout[0]~output .open_drain_output = "false";
defparam \HEXout[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \Enter~input (
	.i(Enter),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Enter~input_o ));
// synopsys translate_off
defparam \Enter~input .bus_hold = "false";
defparam \Enter~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Reset_Lock~input (
	.i(Reset_Lock),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Reset_Lock~input_o ));
// synopsys translate_off
defparam \Reset_Lock~input .bus_hold = "false";
defparam \Reset_Lock~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \X~input (
	.i(X),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\X~input_o ));
// synopsys translate_off
defparam \X~input .bus_hold = "false";
defparam \X~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \State~2 (
// Equation(s):
// \State~2_combout  = ( \X~input_o  & ( (!\Reset_Lock~input_o  & ((!\State[0]~reg0_q ) # ((\State[2]~reg0_q  & \State[1]~reg0_q )))) ) ) # ( !\X~input_o  & ( (\State[2]~reg0_q  & (\State[1]~reg0_q  & (\State[0]~reg0_q  & !\Reset_Lock~input_o ))) ) )

	.dataa(!\State[2]~reg0_q ),
	.datab(!\State[1]~reg0_q ),
	.datac(!\State[0]~reg0_q ),
	.datad(!\Reset_Lock~input_o ),
	.datae(!\X~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\State~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \State~2 .extended_lut = "off";
defparam \State~2 .lut_mask = 64'h0100F1000100F100;
defparam \State~2 .shared_arith = "off";
// synopsys translate_on

dffeas \State[0]~reg0 (
	.clk(\Enter~input_o ),
	.d(\State~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\State[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \State[0]~reg0 .is_wysiwyg = "true";
defparam \State[0]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \State~1 (
// Equation(s):
// \State~1_combout  = ( \X~input_o  & ( (!\Reset_Lock~input_o  & ((!\State[1]~reg0_q  & ((\State[0]~reg0_q ))) # (\State[1]~reg0_q  & ((!\State[0]~reg0_q ) # (\State[2]~reg0_q ))))) ) ) # ( !\X~input_o  & ( (\State[2]~reg0_q  & (\State[1]~reg0_q  & 
// (\State[0]~reg0_q  & !\Reset_Lock~input_o ))) ) )

	.dataa(!\State[2]~reg0_q ),
	.datab(!\State[1]~reg0_q ),
	.datac(!\State[0]~reg0_q ),
	.datad(!\Reset_Lock~input_o ),
	.datae(!\X~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\State~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \State~1 .extended_lut = "off";
defparam \State~1 .lut_mask = 64'h01003D0001003D00;
defparam \State~1 .shared_arith = "off";
// synopsys translate_on

dffeas \State[1]~reg0 (
	.clk(\Enter~input_o ),
	.d(\State~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\State[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \State[1]~reg0 .is_wysiwyg = "true";
defparam \State[1]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \State~0 (
// Equation(s):
// \State~0_combout  = ( \X~input_o  & ( (\State[2]~reg0_q  & !\Reset_Lock~input_o ) ) ) # ( !\X~input_o  & ( (\State[1]~reg0_q  & (\State[0]~reg0_q  & !\Reset_Lock~input_o )) ) )

	.dataa(!\State[2]~reg0_q ),
	.datab(!\State[1]~reg0_q ),
	.datac(!\State[0]~reg0_q ),
	.datad(!\Reset_Lock~input_o ),
	.datae(!\X~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\State~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \State~0 .extended_lut = "off";
defparam \State~0 .lut_mask = 64'h0300550003005500;
defparam \State~0 .shared_arith = "off";
// synopsys translate_on

dffeas \State[2]~reg0 (
	.clk(\Enter~input_o ),
	.d(\State~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\State[2]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \State[2]~reg0 .is_wysiwyg = "true";
defparam \State[2]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Decoder0~0 (
// Equation(s):
// \Decoder0~0_combout  = (\State[2]~reg0_q  & (\State[1]~reg0_q  & \State[0]~reg0_q ))

	.dataa(!\State[2]~reg0_q ),
	.datab(!\State[1]~reg0_q ),
	.datac(!\State[0]~reg0_q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Decoder0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Decoder0~0 .extended_lut = "off";
defparam \Decoder0~0 .lut_mask = 64'h0101010101010101;
defparam \Decoder0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \comb_43|WideOr6~0 (
// Equation(s):
// \comb_43|WideOr6~0_combout  = (!\State[2]~reg0_q  & (!\State[1]~reg0_q )) # (\State[2]~reg0_q  & (\State[1]~reg0_q  & \State[0]~reg0_q ))

	.dataa(!\State[2]~reg0_q ),
	.datab(!\State[1]~reg0_q ),
	.datac(!\State[0]~reg0_q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_43|WideOr6~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_43|WideOr6~0 .extended_lut = "off";
defparam \comb_43|WideOr6~0 .lut_mask = 64'h8989898989898989;
defparam \comb_43|WideOr6~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \comb_43|WideOr5~0 (
// Equation(s):
// \comb_43|WideOr5~0_combout  = (!\State[2]~reg0_q  & ((\State[0]~reg0_q ) # (\State[1]~reg0_q ))) # (\State[2]~reg0_q  & (\State[1]~reg0_q  & \State[0]~reg0_q ))

	.dataa(!\State[2]~reg0_q ),
	.datab(!\State[1]~reg0_q ),
	.datac(!\State[0]~reg0_q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_43|WideOr5~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_43|WideOr5~0 .extended_lut = "off";
defparam \comb_43|WideOr5~0 .lut_mask = 64'h2B2B2B2B2B2B2B2B;
defparam \comb_43|WideOr5~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \comb_43|WideOr4~0 (
// Equation(s):
// \comb_43|WideOr4~0_combout  = ((\State[2]~reg0_q  & !\State[1]~reg0_q )) # (\State[0]~reg0_q )

	.dataa(!\State[2]~reg0_q ),
	.datab(!\State[1]~reg0_q ),
	.datac(!\State[0]~reg0_q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_43|WideOr4~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_43|WideOr4~0 .extended_lut = "off";
defparam \comb_43|WideOr4~0 .lut_mask = 64'h4F4F4F4F4F4F4F4F;
defparam \comb_43|WideOr4~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \comb_43|WideOr3~0 (
// Equation(s):
// \comb_43|WideOr3~0_combout  = (!\State[2]~reg0_q  & (!\State[1]~reg0_q  & \State[0]~reg0_q )) # (\State[2]~reg0_q  & (!\State[1]~reg0_q  $ (\State[0]~reg0_q )))

	.dataa(!\State[2]~reg0_q ),
	.datab(!\State[1]~reg0_q ),
	.datac(!\State[0]~reg0_q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_43|WideOr3~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_43|WideOr3~0 .extended_lut = "off";
defparam \comb_43|WideOr3~0 .lut_mask = 64'h4949494949494949;
defparam \comb_43|WideOr3~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \comb_43|Decoder0~0 (
// Equation(s):
// \comb_43|Decoder0~0_combout  = (!\State[2]~reg0_q  & (\State[1]~reg0_q  & !\State[0]~reg0_q ))

	.dataa(!\State[2]~reg0_q ),
	.datab(!\State[1]~reg0_q ),
	.datac(!\State[0]~reg0_q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_43|Decoder0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_43|Decoder0~0 .extended_lut = "off";
defparam \comb_43|Decoder0~0 .lut_mask = 64'h2020202020202020;
defparam \comb_43|Decoder0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \comb_43|WideOr1~0 (
// Equation(s):
// \comb_43|WideOr1~0_combout  = (\State[2]~reg0_q  & (!\State[1]~reg0_q  $ (!\State[0]~reg0_q )))

	.dataa(!\State[2]~reg0_q ),
	.datab(!\State[1]~reg0_q ),
	.datac(!\State[0]~reg0_q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_43|WideOr1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_43|WideOr1~0 .extended_lut = "off";
defparam \comb_43|WideOr1~0 .lut_mask = 64'h1414141414141414;
defparam \comb_43|WideOr1~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \comb_43|WideOr0~0 (
// Equation(s):
// \comb_43|WideOr0~0_combout  = (!\State[1]~reg0_q  & (!\State[2]~reg0_q  $ (!\State[0]~reg0_q )))

	.dataa(!\State[2]~reg0_q ),
	.datab(!\State[1]~reg0_q ),
	.datac(!\State[0]~reg0_q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\comb_43|WideOr0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \comb_43|WideOr0~0 .extended_lut = "off";
defparam \comb_43|WideOr0~0 .lut_mask = 64'h4848484848484848;
defparam \comb_43|WideOr0~0 .shared_arith = "off";
// synopsys translate_on

assign Open = \Open~output_o ;

assign State[0] = \State[0]~output_o ;

assign State[1] = \State[1]~output_o ;

assign State[2] = \State[2]~output_o ;

assign State[3] = \State[3]~output_o ;

assign HEXout[6] = \HEXout[6]~output_o ;

assign HEXout[5] = \HEXout[5]~output_o ;

assign HEXout[4] = \HEXout[4]~output_o ;

assign HEXout[3] = \HEXout[3]~output_o ;

assign HEXout[2] = \HEXout[2]~output_o ;

assign HEXout[1] = \HEXout[1]~output_o ;

assign HEXout[0] = \HEXout[0]~output_o ;

endmodule
